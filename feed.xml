<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://zemanpeter.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://zemanpeter.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-19T18:15:06+00:00</updated><id>https://zemanpeter.github.io/feed.xml</id><title type="html">blank</title><subtitle>Peter Zeman&apos;s homepage. </subtitle><entry><title type="html">Counting walks</title><link href="https://zemanpeter.github.io/blog/2025/counting-walks/" rel="alternate" type="text/html" title="Counting walks"/><published>2025-04-18T15:12:00+00:00</published><updated>2025-04-18T15:12:00+00:00</updated><id>https://zemanpeter.github.io/blog/2025/counting-walks</id><content type="html" xml:base="https://zemanpeter.github.io/blog/2025/counting-walks/"><![CDATA[<p>Let $X$ be a simple graph and $A$ its adjacency matrix. It is well-known that the number of length-$k$ walks from a vertex $x$ to $y$ corresponds to the entry $(x, y)$ of the $k$th power of $A$.</p> <p>What if we impose some constraints on the walks? For instance, suppose that we want to count walks of length $k$ in which no edge repeats twice in a row; see for example <a href="https://codeforces.com/problemset/problem/1662/C">this</a>. It turns out that there is a nice formula to count such walks, although, it is a bit more involved.</p> <p>For $k = 1$, this is still achieved by the adjacency matrix $A$. For $k = 2$, the matrix $A^2$ ignores the constraint. However, this is not difficult to fix. All the walks that violate the constraint are of type $xyx$, for some edge $xy\in E(X)$. For every vertex $x$, the number of such walks is exactly $\deg(x)$ and they are all stored on the diagonal of $A^2$. Thus, for $k = 2$, we can refine the formula by substracting $D$, where</p> \[(D)_{xy} = \begin{cases} \deg(x) \quad &amp;\text{if $x = y$,}\\ 0 \quad &amp;\text{if $x \neq y$}. \end{cases}\] <p>If $B_k$ should be the matrix counting walks of length $k$ in which no edge repeats twice in a row, then we can write</p> \[\begin{align*} B_1 &amp;= A,\\ B_2 &amp;= A - D. \end{align*}\] <p>Notice that in the matrix $B_{k-1}A$, for $k\geq 3$, the entry $(x, y)$ stores the numbers of walks that are of the form $Wy$, where $W$ is some walk of length $k-1$ that starts at $x$ and satisfies the constraint. We need to substract all the constraint-satisfying walks of length $k-1$ that end with $yz$ since all these walks yield a walk of length $k$ that violates the constraint.</p> <p>Each such walk can be obtained by taking a constraint-satisfying walk of length $k-2$ from $x$ to $y$ and then choosing one of $\deg(y)-1$ possible edges from $y$. Thus, the number of such walks from $x$ to $z$ is $(B_{k-2})_{xy}\cdot (\deg(y)-1)$. This leads us to the following formula:</p> \[B_{k-1} = B_{k-1}A - B_{k-2}(D - I).\] <p><strong>Are there some simple formulas for counting walks with some other constraints?</strong> <strong>For example, what if every edge can appear only at most once in every subwalk of length $\ell$?</strong>.</p>]]></content><author><name></name></author><category term="combinatorics"/><category term="graphs"/><category term="counting"/><summary type="html"><![CDATA[Recurrence relations for counting several types of walks.]]></summary></entry><entry><title type="html">Graham-Pollak determinant formula</title><link href="https://zemanpeter.github.io/blog/2025/graham-pollak/" rel="alternate" type="text/html" title="Graham-Pollak determinant formula"/><published>2025-04-07T15:12:00+00:00</published><updated>2025-04-07T15:12:00+00:00</updated><id>https://zemanpeter.github.io/blog/2025/graham-pollak</id><content type="html" xml:base="https://zemanpeter.github.io/blog/2025/graham-pollak/"><![CDATA[<p><strong>Theorem</strong> (Graham, Pollak; 1971): Let $D_n$ be the distance matrix of a tree, i.e.,</p> \[(D_n)_{x,y} = d(x,y).\] <p>Then</p> \[\det(D_n) = (-1)^{n-1}(n-1)2^{n-2}.\] <p>Thus, surprisingly, the the determinant of $D_n$ dopends solely on on the number of the vertices of a tree and not at all on its structure.</p> <p><strong>Is there some good combinatorial explanation of this formula?</strong></p>]]></content><author><name></name></author><category term="combinatorics"/><category term="trees"/><category term="determinant"/><summary type="html"><![CDATA[A beautiful formula for the determinant of the distance matrix of a tree.]]></summary></entry></feed>